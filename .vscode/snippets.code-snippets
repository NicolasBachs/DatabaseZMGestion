{
    "nuevo_sp": {
        "scope": "sql",
        "prefix": [
            "procedure"
        ],
        "body": [
            "DROP PROCEDURE IF EXISTS $TM_FILENAME_BASE;",
            "DELIMITER $$",
            "CREATE PROCEDURE $TM_FILENAME_BASE(pIn JSON)",
            "SALIR: BEGIN",
            "\t/*",
            "\t\t${1:Descripción del sp}",
            "",
            "\t*/",
            "\t$0",
            "END $$",
            "DELIMITER ;"
        ],
        "description": "Estructura de un nuevo SP"
    },
    "agregar_handler": {
        "scope": "sql",
        "prefix": [
            "handler"
        ],
        "body": [
            "DECLARE EXIT HANDLER FOR SQLEXCEPTION",
            "BEGIN",
            "\tSHOW ERRORS;",
            "\tSELECT f_generarRespuesta(\"ERROR_TRANSACCION\", NULL) pOut;",
            "\tROLLBACK;",
            "END;"
        ],
        "description": "Handler de una transacción"
    },
    "agregar_error": {
        "scope": "sql",
        "prefix": [
            "error"
        ],
        "body": [
            "SELECT f_generarRespuesta(\"$1\", NULL) pOut;",
            "LEAVE SALIR;"
        ],
        "description": "Respuesta de error en un control"
    },
    "agregar_respuesta": {
        "scope": "sql",
        "prefix": "respuesta",
        "body": [
            "SELECT f_generarRespuesta(\"$1\", NULL) pOut;",
        ],
        "description": "Respuesta"
    },
    "agregar_control_permisos": {
        "scope": "sql",
        "prefix": [
            "permisos"
        ],
        "body": [
            "-- Control de permisos",
            "DECLARE pUsuariosEjecuta JSON;",
            "DECLARE pIdUsuarioEjecuta smallint;",
            "DECLARE pToken varchar(256);",
            "DECLARE pMensaje text;\n",

            "\nSET pUsuariosEjecuta = pIn ->> \"$.UsuariosEjecuta\";",
            "SET pToken = pUsuariosEjecuta ->> \"$.Token\";\n",

            "CALL zsp_usuario_tiene_permiso(pToken, '$TM_FILENAME_BASE', pIdUsuarioEjecuta, pMensaje);",
            "IF pMensaje != 'OK' THEN",
            "\tSELECT f_generarRespuesta(pMensaje, NULL) pOut;",
            "\tLEAVE SALIR;",
            "END IF;",
        ],
        "description": "Control de permisos"
    },
    "transaction": {
        "scope": "sql",
        "prefix": [
            "transaction"
        ],
        "body": [
            "START TRANSACTION;\n\n",
            "COMMIT;",
        ],
        "description": "Definicion de una transaccion"
    },
    "agregar_paginacion": {
        "scope": "sql",
        "prefix": [
            "paginacion"
        ],
        "body": [
            "-- Paginacion\nDECLARE pPaginaciones JSON;\nDECLARE pPagina INT;\nDECLARE pLongitudPagina INT;\nDECLARE pCantidadTotal INT;\nDECLARE pOffset INT;\n\n-- ResultSet\nDECLARE pRespuesta JSON;\n\nSET pPaginaciones = pIn ->>'$.Paginaciones';\nSET pPagina = pPaginaciones ->> '$.Pagina';\nSET pLongitudPagina = pPaginaciones ->> '$.LongitudPagina';\n\nIF COALESCE(pPagina, 0) < 1 THEN\n\tSET pPagina = 1;\nEND IF;\n\nIF pLongitudPagina IS NULL OR pLongitudPagina = 0 THEN\n\tSET pLongitudPagina = (SELECT Valor FROM Empresa WHERE Parametro = 'LONGITUDPAGINA');\nEND IF;\n\nSET pOffset = (pPagina - 1) * pLongitudPagina;\n\nDROP TEMPORARY TABLE IF EXISTS tmp_ResultadoBusquedaSinPaginar;\n\nCREATE TEMPORARY TABLE tmp_ResultadoBusquedaSinPaginar AS\n$1;\n\n-- Para devolver CantidadTotal en Paginaciones\nSET pCantidadTotal = (SELECT COUNT(*) FROM tmp_ResultadoBusquedaSinPaginar);\n\nSELECT\nJSON_OBJECT(\n\t'response', JSON_OBJECT(\n\t\t'Paginaciones', JSON_OBJECT(\n\t\t\t'LongitudPagina', pLongitudPagina,\n\t\t\t'CantidadTotal', pCantidadTotal,\n\t\t\t'Pagina', pPagina\n\t\t),\n\t\t'$2',\n\t\tJSON_ARRAYAGG(\n\t\t\tJSON_OBJECT(\n\t\t\t\t'$3', $4\n\t\t\t)\n\t\t)\n\t)\n)\nFROM (\n\tSELECT *\n\tFROM tmp_ResultadoBusquedaSinPaginar\n\tLIMIT pOffset, pLongitudPagina\n);\n\nDROP TEMPORARY TABLE IF EXISTS tmp_ResultadoBusquedaSinPaginar;\n\n"
        ],
        "description": "Todo lo necesario para paginar"
    }
}
